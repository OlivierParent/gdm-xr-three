{"version":3,"sources":["App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Button/index.jsx","App/components/Clock/Analogue.jsx","App/components/Clock/Digital.jsx","App/components/Cube/index.jsx","App/components/Suzanne/suzanne.glb","App/components/Suzanne/index.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.js"],"names":["Lighting","color","intensity","position","angle","MathUtils","degToRad","penumbra","LightingGui","scene","useThree","targetObject","Object3D","add","useControls","ambientLightColor","label","value","ambientLightIntensity","max","min","step","directionalLightColor","directionalLightIntensity","pointLightColor","pointLightIntensity","spotLightColor","spotLightIntensity","spotLightPenumbra","spotLightPosition","x","y","z","spotLightTarget","directionalLightRef","useRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","useEffect","ref","target","Button","useState","hover","setHover","setColor","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","ClockAnalogue","clockRef","handHoursRef","handMinutesRef","handSecondsRef","useFrame","d","Date","current","rotation","getHours","getMinutes","getSeconds","fontSize","Array","fill","map","index","rad","deg","ClockDigital","text","toLocaleTimeString","Cube","toggle","setToggle","useSpring","Math","random","mesh","Suzanne","useGLTF","suzanneGlb","nodes","materials","geometry","material","components","lightings","Content","enableOrbitControls","showAxesHelper","showGridHelper","useComponent","options","useLighting","showGui","showComponent","name","showLighting","OrbitControls","fallback","App","linear","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a837624f.chunk.js","sourcesContent":["import { MathUtils } from \"three\";\r\n\r\nconst Lighting = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight color={0xffffff} intensity={1} position={[4, 4, 1]} />\r\n      <pointLight color={0xffcc77} intensity={0.5} position={[-4, 1, -4]} />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","import {\r\n  DirectionalLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\nimport { useThree } from \"@react-three/fiber\";\r\n\r\nconst LightingGui = () => {\r\n  const { scene } = useThree();\r\n  const targetObject = new Object3D();\r\n  scene.add(targetObject);\r\n\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n      ambientLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 5,\r\n        min: 0,\r\n        step: 0.1,\r\n        value: 0.1,\r\n      },\r\n    }\r\n  );\r\n  const { directionalLightColor, directionalLightIntensity } = useControls(\r\n    \"Lighting - Directional\",\r\n    {\r\n      directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n      directionalLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 5,\r\n        min: 0,\r\n        step: 0.1,\r\n        value: 0.1,\r\n      },\r\n    }\r\n  );\r\n  const { pointLightColor, pointLightIntensity } = useControls(\r\n    \"Lighting - Point\",\r\n    {\r\n      pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n      pointLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 5,\r\n        min: 0,\r\n        step: 0.1,\r\n        value: 0.5,\r\n      },\r\n    }\r\n  );\r\n  const {\r\n    spotLightColor,\r\n    spotLightIntensity,\r\n    spotLightPenumbra,\r\n    spotLightPosition,\r\n    spotLightTarget,\r\n  } = useControls(\"Lighting - Spot\", {\r\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    spotLightIntensity: {\r\n      label: \"Intensity\",\r\n      max: 5,\r\n      min: 0,\r\n      step: 0.1,\r\n      value: 0.5,\r\n    },\r\n    spotLightPenumbra: {\r\n      label: \"Penumbra\",\r\n      max: 1,\r\n      min: 0,\r\n      step: 0.1,\r\n      value: 0.5,\r\n    },\r\n    spotLightPosition: {\r\n      label: \"Position\",\r\n      step: 0.5,\r\n      value: { x: 0, y: 4, z: 0 },\r\n    },\r\n    spotLightTarget: {\r\n      label: \"Target\",\r\n      step: 0.5,\r\n      value: { x: 0, y: 0, z: 0 },\r\n    },\r\n  });\r\n  const directionalLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLightColor\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\r\n\r\n  useEffect(() => {\r\n    targetObject.position.x = spotLightTarget.x;\r\n    targetObject.position.y = spotLightTarget.y;\r\n    targetObject.position.z = spotLightTarget.z;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[4, 4, 1]}\r\n        ref={directionalLightRef}\r\n      />\r\n      <pointLight\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[-4, 1, -4]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={spotLightPenumbra}\r\n        position={[\r\n          spotLightPosition.x,\r\n          spotLightPosition.y,\r\n          spotLightPosition.z,\r\n        ]}\r\n        ref={spotLightRef}\r\n        target={targetObject}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingGui;\r\n","import { useState } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Button = () => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <meshBasicMaterial\r\n          color={color}\r\n          opacity={hover ? 0.75 : 1}\r\n          transparent={true}\r\n        />\r\n        <planeGeometry args={[1, 0.5]} />\r\n      </mesh>\r\n      <Text>Click Me!</Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ClockAnalogue = () => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.y = MathUtils.degToRad(\r\n        (d.getHours() + d.getMinutes() / 60) * -(360 / 12)\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.y = MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / 60)\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.y = MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / 60)\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={clockRef}>\r\n      <Text color={0x000000} fontSize={0.2} position={[0, -0.5, 0.01]}>\r\n        Arteveldehogeschool\r\n      </Text>\r\n      <mesh>\r\n        <circleGeometry args={[1.8, 60]} />\r\n        <meshBasicMaterial color={0x999999} />\r\n      </mesh>\r\n      {Array(60)\r\n        .fill(null)\r\n        .map((value, index) => {\r\n          const rad = MathUtils.degToRad((360 / 60) * index);\r\n          return (\r\n            <group key={index} position={[0, 0, 0.005]} rotation={[0, 0, rad]}>\r\n              <mesh position={[1.6, 0, 0]}>\r\n                <boxGeometry args={[index % 5 ? 0.15 : 0.2, 0.02, 0.01]} />\r\n                <meshBasicMaterial color={index % 5 ? 0x666666 : 0x000000} />\r\n              </mesh>\r\n            </group>\r\n          );\r\n        })}\r\n      <group rotation={[90, 90, 0].map((deg) => MathUtils.degToRad(deg))}>\r\n        <group ref={handMinutesRef}>\r\n          <mesh position={[0.7, 0, 0]}>\r\n            <boxGeometry args={[1.4, 0.01, 0.04]} />\r\n            <meshBasicMaterial color={\"green\"} />\r\n          </mesh>\r\n        </group>\r\n        <group ref={handHoursRef}>\r\n          <mesh position={[0.6, 0.01, 0]}>\r\n            <boxGeometry args={[1.2, 0.02, 0.08]} />\r\n            <meshBasicMaterial color={\"red\"} />\r\n          </mesh>\r\n        </group>\r\n        <group ref={handSecondsRef}>\r\n          <mesh position={[0.8, 0.02, 0]}>\r\n            <boxGeometry args={[1.6, 0.01, 0.02]} />\r\n            <meshBasicMaterial color={\"blue\"} />\r\n          </mesh>\r\n        </group>\r\n      </group>\r\n      <mesh rotation={[90, 0, 0].map((deg) => MathUtils.degToRad(deg))}>\r\n        <coneGeometry args={[0.1, 0.1, 36]} />\r\n        <meshBasicMaterial />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ClockAnalogue;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ClockDigital = () => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.text = new Date().toLocaleTimeString();\r\n    }\r\n  });\r\n\r\n  return <Text ref={clockRef}>Digital Clock</Text>;\r\n};\r\n\r\nexport default ClockDigital;\r\n","import { useState } from \"react\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Cube = () => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const { position } = useSpring({\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh onClick={() => setToggle(!toggle)} position={position}>\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshBasicMaterial color={0xffffff * Math.random()} />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","export default __webpack_public_path__ + \"static/media/suzanne.8d88e641.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst Suzanne = () => {\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\r\n  );\r\n};\r\n\r\nexport default Suzanne;\r\n","import { Suspense } from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\nimport { Route, Router } from \"wouter\";\r\n\r\nimport Lighting from \"./components/Lighting\";\r\nimport LightingGui from \"./components/Lighting/indexGui\";\r\n\r\nimport Button from \"./components/Button\";\r\nimport ClockAnalogue from \"./components/Clock/Analogue\";\r\nimport ClockDigital from \"./components/Clock/Digital\";\r\nimport Cube from \"./components/Cube\";\r\nimport Suzanne from \"./components/Suzanne\";\r\n\r\nconst components = [\r\n  \"Button\",\r\n  \"Clock (analogue)\",\r\n  \"Clock (digital)\",\r\n  \"Cube\",\r\n  \"Suzanne\",\r\n];\r\n\r\nconst lightings = [\"Default\"];\r\n\r\nconst Content = () => {\r\n  const { enableOrbitControls } = useControls(\"Controls\", {\r\n    enableOrbitControls: {\r\n      label: \"Orbit Controls\",\r\n      value: true,\r\n    },\r\n  });\r\n  const { showAxesHelper, showGridHelper } = useControls(\"Helpers\", {\r\n    showAxesHelper: { label: \"Axes\", value: false },\r\n    showGridHelper: { label: \"Grid\", value: false },\r\n  });\r\n  const { useComponent } = useControls(\"General\", {\r\n    useComponent: {\r\n      label: \"Component\",\r\n      options: components,\r\n      value: \"Cube\",\r\n    },\r\n  });\r\n  const { showGui, useLighting } = useControls(\"Lighting\", {\r\n    useLighting: {\r\n      label: \"Lighting\",\r\n      options: lightings,\r\n      value: \"Default\",\r\n    },\r\n    showGui: { label: \"GUI\", value: false },\r\n  });\r\n\r\n  function showComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  function showLighting(name) {\r\n    return useLighting === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {showAxesHelper && <axesHelper />}\r\n        {showGridHelper && <gridHelper />}\r\n        {enableOrbitControls && <OrbitControls />}\r\n      </>\r\n      {showComponent(\"Button\") && <Button />}\r\n      {showComponent(\"Clock (analogue)\") && <ClockAnalogue />}\r\n      {showComponent(\"Clock (digital)\") && <ClockDigital />}\r\n      {showComponent(\"Cube\") && <Cube />}\r\n      <Suspense fallback={null}>\r\n        {showComponent(\"Suzanne\") && <Suzanne />}\r\n      </Suspense>\r\n      {showLighting(\"Default\") && !showGui && <Lighting />}\r\n      {showLighting(\"Default\") && showGui && <LightingGui />}\r\n      {/* <Router>\r\n                <Route component={} path=\"\" />\r\n            </Router> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\nimport Content from \"./Content\";\n\nconst App = () => {\n  return (\n    <Canvas>\n      <Content linear={false} shadows={true} />\n    </Canvas>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}