{"version":3,"sources":["App/components/Button/index.jsx","App/components/Cube/index.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.js"],"names":["Button","useState","hover","setHover","color","setColor","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","Cube","toggle","setToggle","position","useSpring","map","value","Math","random","mesh","components","Content","enableOrbitControls","useControls","label","useComponent","options","showComponent","name","OrbitControls","App","linear","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA2BeA,EAxBA,WACb,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,OAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,OACE,wBACEC,QAAS,kBAAMD,EAAS,WACxBE,cAAe,kBAAMF,EAAS,MAC9BG,aAAc,kBAAML,GAAS,IAC7BM,cAAe,kBAAMN,GAAS,IAJhC,UAME,iCACE,mCACEC,MAAOA,EACPM,QAASR,EAAQ,IAAO,EACxBS,aAAa,IAEf,+BAAeC,KAAM,CAAC,EAAG,SAE3B,cAACC,EAAA,EAAD,4B,QCDSC,EAlBF,WACX,MAA4Bb,oBAAS,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KACQC,EAAaC,oBAAU,CAC7BD,SAAUF,EAAS,CAAC,EAAG,EAAG,GAInB,CAAC,EAAG,EAAG,GAAGI,KAAI,SAACC,GAAD,OAA4B,EAAhBC,KAAKC,SAAe,GAAKF,OALpDH,SAQR,OACE,eAAC,WAASM,KAAV,CAAejB,QAAS,kBAAMU,GAAWD,IAASE,SAAUA,EAA5D,UACE,6BAAaL,KAAM,CAAC,EAAG,EAAG,KAC1B,mCAAmBR,MAAO,SAAWiB,KAAKC,eCT1CE,EAAa,CAAC,SAAU,QAiCfC,EA/BC,WACd,IAAQC,EAAwBC,YAAY,WAAY,CACtDD,oBAAqB,CACnBE,MAAO,iBACPR,OAAO,KAHHM,oBAMAG,EAAiBF,YAAY,UAAW,CAC9CE,aAAc,CACZD,MAAO,YACPE,QAASN,EACTJ,MAAO,UAJHS,aAQR,SAASE,EAAcC,GACrB,OAAOH,IAAiBG,EAG1B,OACE,qCACGN,GAAuB,cAACO,EAAA,EAAD,IACvBF,EAAc,WAAa,cAAC,EAAD,IAC3BA,EAAc,SAAW,cAAC,EAAD,QCrBjBG,EARH,WACV,OACE,cAAC,IAAD,UACE,cAAC,EAAD,CAASC,QAAQ,EAAOC,SAAS,OCMxBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc318f5d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Button = () => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <meshBasicMaterial\r\n          color={color}\r\n          opacity={hover ? 0.75 : 1}\r\n          transparent={true}\r\n        />\r\n        <planeGeometry args={[1, 0.5]} />\r\n      </mesh>\r\n      <Text>Click Me!</Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Cube = () => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const { position } = useSpring({\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh onClick={() => setToggle(!toggle)} position={position}>\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshBasicMaterial color={0xffffff * Math.random()} />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import { OrbitControls } from \"@react-three/drei\";\r\nimport { Route, Router } from \"wouter\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport Button from \"./components/Button\";\r\nimport Cube from \"./components/Cube\";\r\n\r\nconst components = [\"Button\", \"Cube\"];\r\n\r\nconst Content = () => {\r\n  const { enableOrbitControls } = useControls(\"Controls\", {\r\n    enableOrbitControls: {\r\n      label: \"Orbit Controls\",\r\n      value: true,\r\n    },\r\n  });\r\n  const { useComponent } = useControls(\"General\", {\r\n    useComponent: {\r\n      label: \"Component\",\r\n      options: components,\r\n      value: \"Cube\",\r\n    },\r\n  });\r\n\r\n  function showComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableOrbitControls && <OrbitControls />}\r\n      {showComponent(\"Button\") && <Button />}\r\n      {showComponent(\"Cube\") && <Cube />}\r\n      {/* <Router>\r\n                <Route component={} path=\"\" />\r\n            </Router> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\nimport Content from \"./Content\";\n\nconst App = () => {\n  return (\n    <Canvas>\n      <Content linear={false} shadows={true} />\n    </Canvas>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}